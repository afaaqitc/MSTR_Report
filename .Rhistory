mutate(btcc=ifelse(btc_balance-diff==0,btc_balance,btc_balance-diff)) %>%
select(c(1,2,5)) %>% left_join(btc_prices,by="date") %>%
select(!c(5,6)) %>% mutate(current=btc_pr*btcc,amt=price*btcc) %>%
rename(BTC=btcc) %>%mutate(Profits=current-amt) %>%
rename_with(.fn = toupper,.cols = everything())
#------------------------------------------------------------------
ark <-
read_html("https://bitbo.io/treasuries/21shares-arkb/") %>%
html_table(fill = TRUE)
ark <-
ark[[2]] %>% row_to_names(row_number = 1) %>% clean_names() %>% select(-c(3)) %>%
mutate(btc_balance = as.numeric(gsub(",", "", btc_balance))) %>%
separate(date, c("m", "d", "y"), sep = " ") %>%
mutate(d = gsub(",", "", d)) %>%
mutate(m = ifelse(m == "Jul", 07, ifelse(
m == "Jun", 06, ifelse(m == "Aug", 08, ifelse(
m == "Sep", 09, ifelse(m == "Oct", 10, ifelse(
m == "Nov", 11, ifelse(m == "Dec", 12, ifelse(
m == "Jan", 01, ifelse(m == "Feb", 02, ifelse(
m == "Mar", 03, ifelse(m == "Apr", 04, ifelse(m == "May", 05, "-"))
))
))
))
))
))) %>%
mutate(date = ymd(paste0(y, "-", m, "-", d))) %>%
select(c(5, 4)) %>% mutate(btcld = lead(btc_balance, 1)) %>%
mutate(diff = ifelse(btc_balance == btcld, "A", btcld)) %>%
mutate(diff =
ifelse(is.na(diff), btc_balance, diff)) %>% filter(!diff == "A") %>%
mutate( diff=as.numeric(diff)) %>%
mutate(btcc=ifelse(btc_balance-diff==0,btc_balance,btc_balance-diff)) %>%
select(c(1,2,5)) %>% left_join(btc_prices,by="date") %>%
select(!c(5,6)) %>% mutate(current=btc_pr*btcc,amt=price*btcc) %>%
rename(BTC=btcc) %>%mutate(Profits=current-amt) %>%
rename_with(.fn = toupper,.cols = everything())
#------------------------------------------------------------------
GBTC <-
read_html("https://bitbo.io/treasuries/grayscale/") %>%
html_table(fill = TRUE)
GBTC <-
GBTC[[2]] %>% row_to_names(row_number = 1) %>% clean_names() %>% select(-c(3)) %>%
mutate(btc_balance = as.numeric(gsub(",", "", btc_balance))) %>%
separate(date, c("m", "d", "y"), sep = " ") %>%
mutate(d = gsub(",", "", d)) %>%
mutate(m = ifelse(m == "Jul", 07, ifelse(
m == "Jun", 06, ifelse(m == "Aug", 08, ifelse(
m == "Sep", 09, ifelse(m == "Oct", 10, ifelse(
m == "Nov", 11, ifelse(m == "Dec", 12, ifelse(
m == "Jan", 01, ifelse(m == "Feb", 02, ifelse(
m == "Mar", 03, ifelse(m == "Apr", 04, ifelse(m == "May", 05, "-"))
))
))
))
))
))) %>%
mutate(date = ymd(paste0(y, "-", m, "-", d))) %>%
select(c(5, 4)) %>% mutate(btcld = lead(btc_balance, 1)) %>%
mutate(diff = ifelse(btc_balance == btcld, "A", btcld)) %>%
mutate(diff =
ifelse(is.na(diff), btc_balance, diff)) %>% filter(!diff == "A") %>%
mutate( diff=as.numeric(diff)) %>%
mutate(btcc=ifelse(btc_balance-diff==0,btc_balance,btc_balance-diff)) %>%
select(c(1,2,5)) %>% left_join(btc_prices,by="date") %>%
select(!c(5,6)) %>% mutate(current=btc_pr*btcc,amt=price*btcc) %>%
rename(BTC=btcc) %>%mutate(Profits=current-amt) %>%
rename_with(.fn = toupper,.cols = everything())
#-----------------------------------------------------------------------------------------
#gbtc <- read.csv("C:\\Users\\JDRK\\Desktop\\GBTC\\gbtc.csv")
gbtc <- read.csv("C:/Users/JDRK/Desktop/GBTC/gbtc.csv")
gbtc<-
gbtc %>% mutate(BTC.Balance=mdy(BTC.Balance))%>%
rename(date=BTC.Balance,BTC = Change, qbtc = Market.Price, price =Stock.Price) %>%
select(c(2,3,4,5)) %>%
mutate(weekd = weekdays(date), months = format(date, "%b")) |>
mutate(price=as.numeric( gsub( ',','',gsub('\\$','',price)))) %>%
mutate(qbtc=as.numeric( gsub( ',','',qbtc))) %>%
mutate(bought = ifelse(qbtc > 0, qbtc, 0),
sold = ifelse(qbtc < 0, qbtc, 0)) %>% filter(!is.na(date))|>
mutate(amt = price *(bought + sold), years = year(date)) |>
group_by(years) |>
summarize(orders = n(),BTC = sum(qbtc),bought = sum(bought),
sold = sum(sold),amt = sum(amt)) |>
mutate(btc_res = cumsum((bought + sold))) |> arrange(desc(years)) |>
mutate(btc_res = as.factor(btc_res)) |>
adorn_totals("row") |> rename_with(.fn = toupper, .cols = everything())
gbtc_head<-
data.frame(ETFs="GBTC", gbtc %>% filter(YEARS!="Total") %>%
mutate(bamt=ifelse((BOUGHT+SOLD)>0,AMT,0),samt=
ifelse((BOUGHT+SOLD)<0,AMT,0)) %>% select(c(bamt,samt,BTC)) %>%
mutate(current=BTC*btc_pr) %>%
summarize(btc=sum(BTC),current=sum(current),bamt=sum(bamt),
samt=sum(samt)) %>%
mutate(profitability=percent( ((samt*-1)+current)/bamt,3),
profits=(samt*-1)+(current-bamt)) %>% rename(amt=bamt) %>%
rename_with(.fn =toupper ,.cols = everything()) %>%
select(c(1,3,2,6)) %>% mutate(AVG_Price=AMT/BTC))
GBTC_Main<-
cbind(gbtc %>% filter(YEARS!="Total")%>%
summarize(Years=n()),gbtc_head) %>%
mutate(Profitability=percent( PROFITS/AMT,2))|>
mutate(AMT=paste0(round(AMT/1000000000,2),"B"),
CURRENT=paste0( round(CURRENT/1000000000,2),"B"),
PROFITS=paste0( round(PROFITS/1000000000,2),"B"),
AVG_Price=comma(AVG_Price,0),BTC=comma(BTC,0)) %>%
select(!c(2))%>%
gt() |>
tab_header(title = "GBTC Main Totals") |>
tab_style(style = list(cell_fill(color="#2E3436"),
cell_text(color="lightgray",weight = "bold",align = "center")),
locations = cells_column_labels()) |>
tab_style(style = list(cell_text(color="#2E3436",weight = "bold",align = "center")),
locations = cells_title()) |>
tab_style(style = list(cell_text(color="#2E3436",
weight = "bold",align = "center")),
locations =cells_body())
gbtc_gt<-
gbtc %>% filter(YEARS!="Total") %>%
mutate(BOUGHT_AMT=ifelse(AMT>0,AMT,0),SOLD_AMT=ifelse(AMT<0,AMT,0))  %>%
select(c(1:4,5,8,6,9)) %>% mutate(BoughT_AMT=comma(BOUGHT_AMT,0),
SOLD_AMT=comma(SOLD_AMT,0),BOUGHT=comma(BOUGHT,0),SOLD=comma(SOLD,0),
BTC=comma(BTC,0)) %>%
select(c("YEARS","ORDERS","BTC","BOUGHT","SOLD","BOUGHT_AMT","SOLD_AMT","AMT")) %>%
gt() %>% fmt_number(columns = c(2,4,5,7),decimals = 0) %>%
fmt_currency(columns =c(6,8) ,decimals = 0) %>%
tab_header(title = "GBTC Main Totals") |>
tab_style(style = list(cell_fill(color="#2E3436"),
cell_text(color="lightgray",weight = "bold",align = "center")),
locations = cells_column_labels()) |>
tab_style(style = list(cell_text(color="#2E3436",weight = "bold",align = "center")),
locations = cells_title()) |>
tab_style(style = list(cell_text(color="#2E3436",
weight = "bold",align = "center")),
locations =cells_body())|>
tab_style(style = list(cell_borders(style = "solid",weight = px(1),color="#2E3436"),
cell_text(color="#2E3436",
weight = "bold",align = "center")),
locations =cells_body(columns = c(4:8))) %>%
grand_summary_rows(columns = c(3,4,5,7),
fmt = ~fmt_number(.,decimals = 0),fns = list(Total=~sum(.))) %>%
grand_summary_rows(columns = c(6,8),
fmt = ~fmt_currency(.,decimals = 0),fns = list(Total=~sum(.))) %>%
tab_style(style = list(cell_fill(color="#2E3436"),cell_text(color="white",
weight = "bold",align = "center")),
locations =cells_grand_summary()) %>%
tab_style(style = list(cell_fill(color="#2E3436"),cell_text(color="white",
weight = "bold",align = "center")),
locations =cells_stub_grand_summary()) %>%
tab_style(style = list(cell_fill(color="#F4EBD0"),
cell_borders(style = "solid",weight = px(1),color="#2E3436",sides = "bottom"),
cell_text(color="#2E3436",
weight = "bold",align = "center")),
locations =cells_body(columns = c(1:3)))  %>%
tab_style(style = list(cell_fill(color="#c5c3c6"),cell_text(weight = "bold",
align = "center",color="black")),locations = cells_title()) %>%
tab_style(style = list(cell_fill(color="#c5c3c6"),cell_text(weight = "bold",
align = "center",color="black")),locations = cells_stub()) %>%
tab_style(style = list(cell_fill(color="#c5c3c6"),cell_text(weight = "bold",
align = "center",color="black")),locations = cells_stubhead())
#------------------------------------------------------------------
gmini <-
read_html("https://bitbo.io/treasuries/grayscale-mini/") %>%
html_table(fill = TRUE)
gmini <-
gmini[[2]] %>% row_to_names(row_number = 1) %>% clean_names() %>% select(-c(3)) %>%
mutate(btc_balance = as.numeric(gsub(",", "", btc_balance))) %>%
separate(date, c("m", "d", "y"), sep = " ") %>%
mutate(d = gsub(",", "", d)) %>%
mutate(m = ifelse(m == "Jul", 07, ifelse(
m == "Jun", 06, ifelse(m == "Aug", 08, ifelse(
m == "Sep", 09, ifelse(m == "Oct", 10, ifelse(
m == "Nov", 11, ifelse(m == "Dec", 12, ifelse(
m == "Jan", 01, ifelse(m == "Feb", 02, ifelse(
m == "Mar", 03, ifelse(m == "Apr", 04, ifelse(m == "May", 05, "-"))
))
))
))
))
))) %>%
mutate(date = ymd(paste0(y, "-", m, "-", d))) %>%
select(c(5, 4)) %>% mutate(btcld = lead(btc_balance, 1)) %>%
mutate(diff = ifelse(btc_balance == btcld, "A", btcld)) %>%
mutate(diff =
ifelse(is.na(diff), btc_balance, diff)) %>% filter(!diff == "A") %>%
mutate( diff=as.numeric(diff)) %>%
mutate(btcc=ifelse(btc_balance-diff==0,btc_balance,btc_balance-diff)) %>%
select(c(1,2,5)) %>% left_join(btc_prices,by="date") %>%
select(!c(5,6)) %>% mutate(current=btc_pr*btcc,amt=price*btcc) %>%
rename(BTC=btcc) %>%mutate(Profits=current-amt) %>%
rename_with(.fn = toupper,.cols = everything())
#------------------------------------------------------------------
bitwise <-
read_html("https://bitbo.io/treasuries/bitwise-bitb/") %>%
html_table(fill = TRUE)
bitwise <-
bitwise[[2]] %>% row_to_names(row_number = 1) %>% clean_names() %>% select(-c(3)) %>%
mutate(btc_balance = as.numeric(gsub(",", "", btc_balance))) %>%
separate(date, c("m", "d", "y"), sep = " ") %>%
mutate(d = gsub(",", "", d)) %>%
mutate(m = ifelse(m == "Jul", 07, ifelse(
m == "Jun", 06, ifelse(m == "Aug", 08, ifelse(
m == "Sep", 09, ifelse(m == "Oct", 10, ifelse(
m == "Nov", 11, ifelse(m == "Dec", 12, ifelse(
m == "Jan", 01, ifelse(m == "Feb", 02, ifelse(
m == "Mar", 03, ifelse(m == "Apr", 04, ifelse(m == "May", 05, "-"))
))
))
))
))
))) %>%
mutate(date = ymd(paste0(y, "-", m, "-", d))) %>%
select(c(5, 4)) %>% mutate(btcld = lead(btc_balance, 1)) %>%
mutate(diff = ifelse(btc_balance == btcld, "A", btcld)) %>%
mutate(diff =
ifelse(is.na(diff), btc_balance, diff)) %>% filter(!diff == "A") %>%
mutate( diff=as.numeric(diff)) %>%
mutate(btcc=ifelse(btc_balance-diff==0,btc_balance,btc_balance-diff)) %>%
select(c(1,2,5)) %>% left_join(btc_prices,by="date") %>%
select(!c(5,6)) %>% mutate(current=btc_pr*btcc,amt=price*btcc) %>%
rename(BTC=btcc) %>%mutate(Profits=current-amt) %>%
rename_with(.fn = toupper,.cols = everything())
# ---------------------------------------------------------------
etfs_raw <-
rbind(
rbind(
data.frame(etfs = "ibit", ish),
data.frame(etfs = "fbtc", fbtc),
data.frame(etfs = "ark", ark),
data.frame(etfs = "gmini", gmini),
data.frame(etfs = "bitwise", bitwise)
) %>%
group_by(etfs) %>% summarize(BTC=sum(BTC),AMT=sum(AMT),
PROFITS=sum(PROFITS),CURRENT=sum(CURRENT)) %>%
mutate(AVG_Price=comma(AMT/BTC,0)) %>%
mutate(AMT=round(AMT/1000000000,2),
CURRENT=round(CURRENT/1000000000,2),
PROFITS=round(PROFITS/1000000000,2)) %>%
arrange(desc(BTC)) %>% select(c(1,2,3,5,4,6))%>%
mutate(BTC=comma(BTC,0), AVG_Price=comma(round(as.numeric(AVG_Price),2),0))
,
gbtc_head %>% rename(etfs=ETFs) %>% mutate(AVG_Price=comma(AMT/BTC,0)) %>%
mutate(AMT=round(AMT/1000000000,2),
CURRENT=round(CURRENT/1000000000,2),
PROFITS=round((PROFITS-AMT)/1000000000,2)) ) %>% arrange(desc(BTC))
etfs <-
etfs_raw %>%   rename(ETFs=etfs) %>%
mutate(ETFs=str_to_upper(ETFs))%>%
gt() %>%grand_summary_rows(columns =c(2:5) ,
fns =list(Total=~sum(.))) %>%
tab_style(style = list(
cell_fill(color = "#EFC081"),
cell_text(
color = "#122620",
align = "center",
weight = "bold"
)
) ,
locations = cells_column_labels()) %>%
tab_style(style = list(cell_text(
color = "#122620",
align = "center",
weight = "bold"
)) , locations = cells_body()) %>%
cols_width(everything() ~ px(100)) %>%
tab_header(title = "ETFs BTC Reserves.") %>%
tab_style(style = list(
cell_fill(color = "#c5c3c6"),
cell_text(
color = "#122620",
align = "center",
weight = "bold"
)
) ,
locations = cells_title()) |>
cols_width(everything() ~ px(100)) %>%
tab_style(style = list(cell_text(
color = "white",
align = "center",
weight = "bold"
),cell_fill(color = "#122620")) ,
locations = cells_grand_summary())%>%
tab_style(style = list(cell_text(
color = "white",
align = "center",
weight = "bold"
),cell_fill(color = "#122620")) ,
locations = cells_stub_grand_summary()) %>%
tab_source_note(source_note =
"Note :Amt,Current & Profits in Billions.") %>%
tab_style(style = list(
cell_fill(color = "#c5c3c6"),
cell_text(
color = "#660708",
weight = "bold",
align = "left"
)
),
locations = cells_source_notes())
etfs_cht<-
etfs_raw %>%
group_by(etfs) %>% summarize(BTC=sum(BTC),
Profits=sum(PROFITS),
pct=sum(PROFITS)/sum(AMT)) %>%
arrange(desc(BTC)) %>%
mutate(etfs=ifelse(etfs %like% "gmi","Grayscale Mini",
ifelse(etfs %like% "ibit","IBIT",etfs))) %>%
mutate(etfs=str_to_upper(etfs)) %>% rename(ETFs=etfs) %>%
head(5)%>%
ggplot(aes(area=BTC,fill=ETFs,
label=paste0(ETFs,"\n",comma( BTC,0),"\n","Profits","\n",
round( Profits,2),"\n","Pct: ",percent( pct,2))))  +
geom_treemap()+
geom_treemap_text( colour = "white",
size = 15,fontface = "bold",place = "left")+
scale_fill_manual(values = c("#C8651B", "#27231F", "#BC0A0F", "#1d3557", "#B68D40"))+
theme(legend.position = "none")
# --------------------Comparing MSTR vs. GBTC & IBIT -----------------------------------------------------------
mstr_top3etf_cht<-
rbind(
data.frame(HODL="IBIT",
ish %>% summarize(BTC=sum(BTC),amt=sum(AMT),current=sum(CURRENT)) %>%
mutate(profitability=percent((current/amt)-1,2)) %>% select(1,4))
,
data.frame(HODL="FTBC",
fbtc %>% summarize(BTC=sum(BTC),amt=sum(AMT),current=sum(CURRENT)) %>%
mutate(profitability=percent((current/amt)-1,2)) %>% select(1,4))
,
data.frame(HODL="GBTC",
gbtc%>% filter(YEARS!="Total")%>%
mutate(BOUGHT_AMT=ifelse(AMT>0,AMT,0),
SOLD_AMT=ifelse(AMT<0,AMT,0)) %>%
summarize(BTC=sum(BOUGHT+SOLD),
SOLD_AMT=sum(SOLD_AMT)/1000000000,
BOUGHT_AMT=sum(BOUGHT_AMT)/1000000000) %>%
mutate(SOLD_AMT=SOLD_AMT*-1,
Current=(BTC*btc_pr)/1000000000) %>%
mutate(profitability=
percent(((Current-BOUGHT_AMT)+SOLD_AMT)/BOUGHT_AMT,2))%>%
select(c(1,5)) )
,
data.frame(HODL="MicrostrategyB", mstr %>%
summarize(BTC=sum(btc_purchased),amt=sum(amt),current=sum(current)) %>%
mutate(profitability=percent((current-amt)/amt,2)) %>% select(c(1,4)))) %>%
ggplot(aes(area=BTC,fill =HODL ,label=
paste0(HODL,"\n",comma(BTC,0),"\n","\n","Profitability","\n",profitability)))+geom_treemap()+
geom_treemap_text(place = "left",size = 11,colour = "white",fontface = "bold")+
theme_bw() + scale_fill_manual(values = c(
"#122620",
"#B68D40",
"#1d3557",
"#BC0A0F",
"#27231F"
))+theme(legend.position = "none")
# ----Countries-----------------------------------------------------------
countries <-
read_html("https://bitbo.io/treasuries/countries/") %>%
html_table(fill = TRUE)
countries<-
countries[[3]] %>%  clean_names() %>%select(c(1,4)) %>%
rename(btc=number_of_btc) %>% mutate(btc=as.numeric(gsub(",","",btc))) %>%
arrange(desc(btc)) %>% filter(country !="" ) %>%
head(5) %>% mutate(Amt=round(btc*btc_pr/1000000000,2))
countries_ch<-
countries %>% ggplot(aes(x=reorder(country,btc),y = btc,fill = country)) +
geom_bar(stat = "identity")+
geom_text(aes(label = comma(btc,0)),colour = "white",fontface = "bold",
position = position_stack(vjust = 0.5))+
theme_bw()+scale_fill_manual(
values = c("#122620","#B68D40","#AF9F30","#1d3557","#BC0A0F","#27231F"))+
coord_flip()+
labs(title ="BTC Reserves By Countries" ,x="",y="")+
theme(title = element_text(face = "bold",colour = "black",size = 11),
axis.text.x = element_text(face = "bold",colour = "black",size = 11),
axis.text.y =   element_text(face = "bold",colour = "black",size = 11))+
scale_y_continuous(labels = comma)
# ----Companies-----------------------------------------------------------
comp<-
read_html("https://bitbo.io/treasuries/#private") %>%
html_table(fill = TRUE)
comp<-
comp[[6]] %>%  clean_names() %>%select(c(1,4)) %>%
rename(btc=number_of_btc) %>% mutate(btc=as.numeric(gsub(",","",btc))) %>%
arrange(desc(btc)) %>% filter(entity !="" ) %>%
head(5) %>% mutate(Amt=round(btc*btc_pr/1000000000,2)) %>%
rename(companies=entity)
comp_cht<-
comp %>%mutate(companies=ifelse(companies %like% "Teth","Tether",
ifelse(companies %like% "Xap","Xapo",
ifelse(companies %like% "Twen","Twenty1C",
companies)))) %>%
ggplot(aes(
x = reorder(companies, btc),
y =btc,
fill = companies
)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = comma(btc, 0)),
colour = "white",
fontface = "bold",
position = position_stack(vjust = 0.5)
) +
theme_bw() + scale_fill_manual(values = c(
"#122620",
"#B68D40",
"#1d3557",
"#BC0A0F",
"#27231F"
)) +
coord_flip() +
labs(title = "BTC Reserves By Companies" , x = "", y = "") +
theme(
title = element_text(
face = "bold",
colour = "black",
size = 11
),
axis.text.x = element_text(
face = "bold",
colour = "black",
size = 11
),
axis.text.y =   element_text(
face = "bold",
colour = "black",
size = 11
)
) +
scale_y_continuous(labels = comma)
# -------------------------------------------------------------------
all_main<-
rbind(
data.frame(Categories="ETF",etfs_raw %>% summarize(BTC=sum(BTC),Amt=round( sum(AMT)/1000000000,2)))
,
data.frame(Categories="MSTR",mstr %>% summarize(BTC=sum(btc_purchased),Amt=round(sum(amt)/1000000000,2)))
,
data.frame(Categories="Companies",comp %>% summarize(BTC=sum(btc),Amt=sum(Amt)))
) %>% ggplot(aes(x="",y=BTC,fill = Categories))+
geom_bar(stat = "identity",width = 1)+
theme_void()+coord_polar(theta = "y")+
geom_text(aes(label =paste0("BTC: ", comma(BTC,0),
"\n","Values: ",Amt,"$ B")),
position = position_stack(vjust = 0.5),colour = "white",fontface = "bold",size = 3)+
scale_fill_manual(values = c("#AF9F30","#1d3557","#BC0A0F"))
comp_countries_cht<-
ggarrange(countries_ch,comp_cht,nrow = 2)
knitr::opts_chunk$set(echo = TRUE)
source("C:\\Users\\JDRK\\Documents\\MSTR\\btc_reserveses.R")
knitr::include_graphics("C:\\Users\\JDRK\\Documents\\GitHub\\MSTR_Report\\Picture1.png")
MSTR_Head
mstr_years_gt
mstr_years_cht
price_class_purchases_gt
price_class_purchases_cht
all_main
comp_countries_cht
etfs
etfs_cht
mstr_top3etf_cht
IBIT_Main
ish_purchases_gt
GBTC_Main
gbtc_gt
data.frame(Date= format(Sys.Date(),"%d %B %y"),BTC_Price=btc_pr,
tq_get("MSTR") |> arrange(desc(date)) |> select(8) |> head(1) |> rename(MSTR_Adj=adjusted))|> gt() |> tab_style(style =list(cell_borders(style = "solid"),cell_text(align = "center",weight = "bold")) ,locations =cells_body() ) |>
tab_style(style =list(cell_fill(color="#2E3436"),cell_text(color="white",align = "center",weight = "bold")) ,locations = cells_column_labels()) |>
cols_width(everything() ~ px(140)) |> fmt_currency(columns = c(BTC_Price,MSTR_Adj),currency = "USD",decimals = 2)
knitr::opts_chunk$set(echo = TRUE)
source("C:\\Users\\JDRK\\Documents\\MSTR\\btc_reserveses.R")
knitr::include_graphics("C:\\Users\\JDRK\\Documents\\GitHub\\MSTR_Report\\Picture1.png")
MSTR_Head
mstr_years_gt
mstr_years_cht
price_class_purchases_gt
price_class_purchases_cht
all_main
comp_countries_cht
etfs
etfs_cht
mstr_top3etf_cht
IBIT_Main
ish_purchases_gt
GBTC_Main
gbtc_gt
data.frame(Date= format(Sys.Date(),"%d %B %y"),BTC_Price=btc_pr,
tq_get("MSTR") |> arrange(desc(date)) |> select(8) |> head(1) |> rename(MSTR_Adj=adjusted))|> gt() |> tab_style(style =list(cell_borders(style = "solid"),cell_text(align = "center",weight = "bold")) ,locations =cells_body() ) |>
tab_style(style =list(cell_fill(color="#2E3436"),cell_text(color="white",align = "center",weight = "bold")) ,locations = cells_column_labels()) |>
cols_width(everything() ~ px(140)) |> fmt_currency(columns = c(BTC_Price,MSTR_Adj),currency = "USD",decimals = 2)
gbtc <- read.csv("C:/Users/JDRK/Desktop/GBTC/gbtc.csv")
gbtc <- read.csv("C:/Users/JDRK/Desktop/GBTC/gbtc.csv")
knitr::opts_chunk$set(echo = TRUE)
source("C:\\Users\\JDRK\\Documents\\MSTR\\btc_reserveses.R")
knitr::include_graphics("C:\\Users\\JDRK\\Documents\\GitHub\\MSTR_Report\\Picture1.png")
MSTR_Head
mstr_years_gt
mstr_years_cht
price_class_purchases_gt
price_class_purchases_cht
all_main
comp_countries_cht
etfs
etfs_cht
mstr_top3etf_cht
IBIT_Main
ish_purchases_gt
GBTC_Main
gbtc_gt
data.frame(Date= format(Sys.Date(),"%d %B %y"),BTC_Price=btc_pr,
tq_get("MSTR") |> arrange(desc(date)) |> select(8) |> head(1) |> rename(MSTR_Adj=adjusted))|> gt() |> tab_style(style =list(cell_borders(style = "solid"),cell_text(align = "center",weight = "bold")) ,locations =cells_body() ) |>
tab_style(style =list(cell_fill(color="#2E3436"),cell_text(color="white",align = "center",weight = "bold")) ,locations = cells_column_labels()) |>
cols_width(everything() ~ px(140)) |> fmt_currency(columns = c(BTC_Price,MSTR_Adj),currency = "USD",decimals = 2)
source("C:\\Users\\JDRK\\Documents\\MSTR\\btc_reserveses.R")
